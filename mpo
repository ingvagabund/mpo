#!/bin/sh

# ####################################################################
# mpo - set of tools to automize packaging of man pages overrides
# Copyright (C) 2013  Peter Schiffer, pschiffe@redhat.com
# Copyright (C) 2014  Jan Chaloupka, jchaloup@redhat.com
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
# ####################################################################

HELP=0
COMP_ADD=1
COMP_REM=2

operation=-1
script_dir=$(dirname $0)

################################
################################
function printHelp {
	echo "Synopsis: mpo command [arg1 [arg2 ...]]"
	echo ""
	echo "command:"
	echo "	help		 prints this help"
	echo "	add-comp	 add component into tarball (MPO_Y_STREAM env must be set)"
	echo "	rem-comp	 remove component from tarball (MPO_Y_STREAM env must be set)"
}

################################
################################
# $1 - command
if [ "$1" == "help" ]; then
	operation=$HELP
elif [ "$1" == "add-comp" ]; then
	operation=$COMP_ADD
elif [ "$1" == "rem-comp" ]; then
	operation=$COMP_REM
fi

################################
################################
if [ $operation -eq -1 ]; then
	echo "Wrong operation"
	printHelp
	exit 0
fi

# dispose the $1 argument, operation already parsed
shift

if [ $operation -eq $HELP ]; then
	printHelp
elif [ $operation -eq $COMP_ADD ]; then
	$script_dir/addComponentToTarball.sh $@
elif [ $operation -eq $COMP_REM ]; then
	$script_dir/removeComponentFromTarball.sh $@
fi

